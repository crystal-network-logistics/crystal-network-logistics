{"version":3,"file":"createPlatformWorker.inline.76bd41df.bundle.min.js","mappings":"qMAAA,MACCA,YAAY,eAAEC,GAAgB,aAC9BC,EACAC,qBAAqB,SAAEC,GACvBC,MAAM,gBAAEC,IACLC,OAAOC,YAELC,EAAwBC,QAAUR,EAAaS,SAAS,YAqCjDC,EAAwBH,EA9BhBI,WACpB,MAAMC,EAAW,iCACjBC,YAAYC,KAAKF,GAEjB,MAAMG,EAAkBb,EAASa,gBAC3BC,EACLD,EAAgBE,WAAW,sBAAwBF,EAAgBE,WAAW,iCAAmCC,SAASC,UAAYC,SAASC,KAXrH,CAACC,IAC5B,MAAMC,EAAO,IAAIC,KAAK,CAAC,kBAAkBF,QAAiB,CAAEG,KAAM,2BAClE,OAAOC,IAAIC,gBAAgBJ,EAAK,EAU5BK,CAAoB1B,EAASa,iBAC7BA,EAAgBc,QAAQ9B,EAAe+B,YAAa,GAAG1B,eAErD2B,EAAiB,IAAIvB,OAAOQ,GAC5BgB,EAAoCC,OAAOC,KAAKhC,EAASiC,YAAYC,MACzEC,QAAQC,IAAM,MAAC,QAAwC,QAAvC,EAAApC,EAASqC,cAAcC,aAAaF,UAAG,eAAEG,kBAAkB,IAC3EC,QAAO,CAACC,EAAmDL,KAC3DK,EAAgBL,GAAMpC,EAASiC,YAAYC,KAAKE,GACzCK,IACL,CAAC,GAELZ,EAAea,YAAY,CAC1BnB,KAAM,2BACNoB,eAAgBb,IAGjB,MAAMc,EAAU,+BAIhB,OAHAjC,YAAYC,KAAKgC,GACjBjC,YAAYkC,QAAQ,6BAA8BnC,EAAUkC,GAErDf,CAAc,EAGuCiB,GAAiBC,QAAQC,S","sources":["webpack:///../../thunderbolt-platform/src/client/create-worker.ts"],"sourcesContent":["const {\n\tsiteAssets: { clientTopology },\n\tsiteFeatures,\n\tsiteFeaturesConfigs: { platform },\n\tsite: { externalBaseUrl },\n} = window.viewerModel\n\nconst shouldCreateWebWorker = Worker && siteFeatures.includes('platform')\n\nconst createWorkerBlobUrl = (workerUrl: string) => {\n\tconst blob = new Blob([`importScripts('${workerUrl}');`], { type: 'application/javascript' })\n\treturn URL.createObjectURL(blob)\n}\n\nconst createWorker = async () => {\n\tconst starMark = 'platform_create-worker started'\n\tperformance.mark(starMark)\n\n\tconst clientWorkerUrl = platform.clientWorkerUrl\n\tconst url =\n\t\tclientWorkerUrl.startsWith('http://localhost:') || clientWorkerUrl.startsWith('https://bo.wix.com/suricate/') || document.baseURI !== location.href\n\t\t\t? createWorkerBlobUrl(platform.clientWorkerUrl)\n\t\t\t: clientWorkerUrl.replace(clientTopology.fileRepoUrl, `${externalBaseUrl}/_partials`)\n\n\tconst platformWorker = new Worker(url)\n\tconst nonFederatedAppsOnPageScriptsUrls = Object.keys(platform.appsScripts.urls)\n\t\t.filter((id) => !platform.bootstrapData.appsSpecData[id]?.isModuleFederated)\n\t\t.reduce((appsScriptsUrls: typeof platform.appsScripts.urls, id) => {\n\t\t\tappsScriptsUrls[id] = platform.appsScripts.urls[id]\n\t\t\treturn appsScriptsUrls\n\t\t}, {})\n\n\tplatformWorker.postMessage({\n\t\ttype: 'platformScriptsToPreload',\n\t\tappScriptsUrls: nonFederatedAppsOnPageScriptsUrls,\n\t})\n\n\tconst endMark = 'platform_create-worker ended'\n\tperformance.mark(endMark)\n\tperformance.measure('Create Platform Web Worker', starMark, endMark)\n\n\treturn platformWorker\n}\n\nexport const platformWorkerPromise = shouldCreateWebWorker ? createWorker() : Promise.resolve()\n"],"names":["siteAssets","clientTopology","siteFeatures","siteFeaturesConfigs","platform","site","externalBaseUrl","window","viewerModel","shouldCreateWebWorker","Worker","includes","platformWorkerPromise","async","starMark","performance","mark","clientWorkerUrl","url","startsWith","document","baseURI","location","href","workerUrl","blob","Blob","type","URL","createObjectURL","createWorkerBlobUrl","replace","fileRepoUrl","platformWorker","nonFederatedAppsOnPageScriptsUrls","Object","keys","appsScripts","urls","filter","id","bootstrapData","appsSpecData","isModuleFederated","reduce","appsScriptsUrls","postMessage","appScriptsUrls","endMark","measure","createWorker","Promise","resolve"],"sourceRoot":""}