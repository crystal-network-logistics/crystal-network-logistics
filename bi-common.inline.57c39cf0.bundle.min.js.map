{"version":3,"file":"bi-common.inline.57c39cf0.bundle.min.js","mappings":"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","sources":["webpack:///../../thunderbolt-commons/src/bi/biLoggerFactory.ts","webpack:///../../thunderbolt-commons/src/bi/fedopsLogger.ts","webpack:///../../thunderbolt-commons/src/bi/fedopsMetricsReporter.ts","webpack:///../../thunderbolt-environment/src/bi/bi.ts","webpack:///../../thunderbolt-symbols/src/features/bi/bi-types.ts","webpack:///../../thunderbolt-symbols/src/symbols/bi.ts"],"sourcesContent":["import { PublishMethods } from '@wix/fe-essentials-viewer-platform/bi'\nimport { BaseFactory, FetchFn } from '@wix/thunderbolt-symbols'\nimport type { FactoryOptions } from './types'\n\nfunction calculateTSN({ initialRequestTimestamp }: { initialRequestTimestamp: number }) {\n\tif (!process.env.browser) {\n\t\t// SSR - no performance api until we move to node 19\n\t\treturn Math.round(Date.now() - initialRequestTimestamp)\n\t}\n\tif (typeof window === 'undefined') {\n\t\t// Worker - now is from worker start so we need to add the main thread diff\n\t\treturn Math.round(performance.now() + (performance.timeOrigin - initialRequestTimestamp))\n\t}\n\t// browser - main thread\n\treturn Math.round(performance.now())\n}\n\n/**\n * Base BI logger factory, should be used as a basis for any BI logger in the Viewer\n *\n * - Initialized with base defaults (which are supported globally in the BI schema).\n * - Any additional defaults should be added via specialized factories, like FedOps,\n *   and only after making sure the BI schema supports them.\n *\n * Please use #bi-logger-support for any questions\n */\n\nconst createBaseBiLoggerFactory = ({\n\tuseBatch = true,\n\tpublishMethod = process.env.browser ? PublishMethods.Auto : PublishMethods.Fetch,\n\tendpoint,\n\tmuteBi = process.env.browser ? false : true,\n\tbiStore,\n\tsessionManager,\n\tfetch,\n\tfactory,\n}: FactoryOptions): BaseFactory => {\n\tconst biLoggerFactory = factory({\n\t\tuseBatch,\n\t\tpublishMethod,\n\t\tendpoint,\n\t\t...(biStore.frogUrlOverride ? { host: biStore.frogUrlOverride.replace(/^https?:\\/\\//, '') + '/_frog' } : {}),\n\t})\n\t\t.setMuted(muteBi)\n\t\t.withUoUContext({ msid: biStore.msid })\n\t\t.withNonEssentialContext({\n\t\t\t// @ts-expect-error - @antonp kindly fix types\n\t\t\tvisitorId: () => sessionManager.getVisitorId(),\n\t\t\t// @ts-expect-error - @antonp kindly fix types\n\t\t\tsiteMemberId: () => sessionManager.getSiteMemberId(),\n\t\t})\n\t\t.updateDefaults({\n\t\t\tvsi: biStore.viewerSessionId,\n\t\t\t_av: `thunderbolt-${biStore.viewerVersion}`,\n\t\t\tisb: biStore.is_headless,\n\t\t\t...(biStore.is_headless && { isbr: biStore.is_headless_reason }),\n\t\t})\n\n\tif (!process.env.browser) {\n\t\tconst fetchWithProtocol: FetchFn = (url, options) => fetch(`https:${url}`, options)\n\t\tbiLoggerFactory.withPublishFunction({\n\t\t\t[PublishMethods.Fetch]: fetchWithProtocol,\n\t\t})\n\t}\n\n\treturn biLoggerFactory\n}\n\n/**\n * BI logger factory for FedOps\n *\n * - Initialized with base defaults + defaults which are supported by FedOps BI events\n *   https://bo.wix.com/bi-catalog-webapp/#/sources/72\n *\n * - Any additional defaults should be added only after making sure the BI schema supports them\n *\n * Please use #bi-logger-support for any questions\n */\nconst createBiLoggerFactoryForFedops = (options: FactoryOptions) => {\n\tconst {\n\t\tbiStore: {\n\t\t\tsession_id,\n\t\t\tinitialTimestamp,\n\t\t\tinitialRequestTimestamp,\n\t\t\tdc,\n\t\t\tmicroPop,\n\t\t\tis_headless,\n\t\t\tisCached,\n\t\t\tpageData,\n\t\t\trolloutData,\n\t\t\tcaching,\n\t\t\tcheckVisibility = () => '',\n\t\t\tviewerVersion,\n\t\t\trequestUrl,\n\t\t\tst,\n\t\t},\n\t\tmuteBi = false,\n\t} = options\n\n\treturn createBaseBiLoggerFactory({ ...options, muteBi }).updateDefaults({\n\t\tts: () => Date.now() - initialTimestamp,\n\t\t// this computation is worker compatible cause performance.now() in the worker is computed from worker initialization time\n\t\ttsn: () => calculateTSN({ initialRequestTimestamp }),\n\t\tdc,\n\t\tmicroPop,\n\t\tcaching,\n\t\tsession_id,\n\t\tst,\n\t\turl: requestUrl || pageData.pageUrl,\n\t\tish: is_headless,\n\t\tpn: pageData.pageNumber,\n\t\tisFirstNavigation: pageData.pageNumber === 1,\n\t\tpv: checkVisibility,\n\t\tpageId: pageData.pageId,\n\t\tisServerSide: !process.env.browser,\n\t\tis_lightbox: pageData.isLightbox,\n\t\tis_cached: isCached,\n\t\tis_sav_rollout: rolloutData.siteAssetsVersionsRollout ? 1 : 0,\n\t\tis_dac_rollout: rolloutData.isDACRollout ? 1 : 0,\n\t\tv: viewerVersion,\n\t})\n}\n\nexport const commonBiLoggerFactory = {\n\tcreateBaseBiLoggerFactory,\n\tcreateBiLoggerFactoryForFedops,\n}\n","import { presetsTypes } from '@wix/fedops-presets'\nimport type { ViewerPlatformEssentials } from '@wix/fe-essentials-viewer-platform'\nimport { FedopsConfig, Experiments } from '@wix/thunderbolt-symbols'\nimport { AppsMutingWhiteList, ThunderboltMutingBlackList, ThunderboltMutingWhiteList } from './constants'\nimport type { FedopsLogger, IAppIdentifier } from '@wix/fedops-logger'\n\nexport type FedopsFactory = ViewerPlatformEssentials['createFedopsLogger']\n\nexport const createFedopsLogger = ({\n\tbiLoggerFactory,\n\tcustomParams = {},\n\tphasesConfig = 'SEND_ON_FINISH',\n\tappName = 'thunderbolt',\n\tpresetType = process.env.PACKAGE_NAME === 'thunderbolt-ds' ? presetsTypes.DS : presetsTypes.BOLT,\n\treportBlackbox = false,\n\tparamsOverrides = {},\n\tfactory,\n\tmuteThunderboltEvents = false,\n\texperiments = {},\n}: FedopsConfig & { factory: FedopsFactory; experiments?: Experiments }): FedopsLogger => {\n\tconst fedopsLogger = factory(appName, {\n\t\tpresetType,\n\t\tphasesConfig,\n\t\tisPersistent: true,\n\t\tisServerSide: !process.env.browser,\n\t\treportBlackbox,\n\t\tcustomParams,\n\t\tbiLoggerFactory,\n\t\t// @ts-ignore FEDINF-3725\n\t\tparamsOverrides,\n\t\tenableSampleRateForAppNames:\n\t\t\t!!experiments['specs.thunderbolt.fedops_enableSampleRateForAppNames'] ??\n\t\t\t!!window?.viewerModel?.experiments['specs.thunderbolt.fedops_enableSampleRateForAppNames'],\n\t})\n\tconst { interactionStarted, interactionEnded, appLoadingPhaseStart, appLoadingPhaseFinish } = fedopsLogger\n\n\tconst shouldReportEvent = (event: string, appIdentifier?: IAppIdentifier) => {\n\t\t// ONLY THUNDERBOLT (APP_ID===UNDEFINED) AND APPS THAT WERE WHITELISTED SHOULD BE SAMPLED\n\t\tconst appShouldReportAll = appIdentifier?.appId ? !AppsMutingWhiteList.has(appIdentifier.appId) : false\n\n\t\t// muteThunderboltEvents = false => event shouldn't muted => event should be reported\n\t\tconst shouldAlwaysReportEvent = ThunderboltMutingBlackList.has(event)\n\t\tconst shouldAlwaysMuteEvent = ThunderboltMutingWhiteList.has(event)\n\n\t\treturn shouldAlwaysReportEvent || appShouldReportAll || (!shouldAlwaysMuteEvent && !muteThunderboltEvents)\n\t}\n\n\t// This is done this way because FedopsLogger is a class and not an Object,\n\t// Therefor if we return an object it will crash because it operates on 'this' which does not exist in an object\n\t// so we can't make it immutable.\n\n\tfedopsLogger.interactionStarted = (interaction: string, ...args) => {\n\t\tif (shouldReportEvent(interaction)) {\n\t\t\treturn interactionStarted.call(fedopsLogger, interaction, ...args)\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tperformance.mark(`${interaction} started`)\n\t\t\t} catch {}\n\t\t}\n\t\treturn { timeoutId: 0 }\n\t}\n\n\tfedopsLogger.interactionEnded = (interaction: string, ...args) => {\n\t\tif (shouldReportEvent(interaction)) {\n\t\t\tinteractionEnded.call(fedopsLogger, interaction, ...args)\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tperformance.mark(`${interaction} ended`)\n\t\t\t} catch {}\n\t\t}\n\t}\n\tfedopsLogger.appLoadingPhaseStart = (phase: string, appIdentifier?: IAppIdentifier, ...args) => {\n\t\tif (shouldReportEvent(phase, appIdentifier)) {\n\t\t\tappLoadingPhaseStart.call(fedopsLogger, phase, appIdentifier, ...args)\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tperformance.mark(`${phase} started`)\n\t\t\t} catch {}\n\t\t}\n\t}\n\tfedopsLogger.appLoadingPhaseFinish = (phase: string, appIdentifier?: IAppIdentifier, ...args) => {\n\t\tif (shouldReportEvent(phase, appIdentifier)) {\n\t\t\tappLoadingPhaseFinish.call(fedopsLogger, phase, appIdentifier, ...args)\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tperformance.mark(`${phase} finished`)\n\t\t\t} catch {}\n\t\t}\n\t}\n\treturn fedopsLogger\n}\n","import { SiteAssetsMetricsReporter } from '@wix/site-assets-client'\nimport type { ILogger, IPlatformLogger } from '@wix/thunderbolt-symbols'\n\nexport const fedopsMetricsReporter = (logger: ILogger): SiteAssetsMetricsReporter => {\n\tconst feature = 'thunderbolt-commons'\n\treturn {\n\t\treportAsyncWithCustomKey: <T>(asyncMethod: () => Promise<T>, methodName: string, key: string): Promise<T> => {\n\t\t\treturn logger.reportAsyncWithCustomKey(asyncMethod, feature, methodName, key)\n\t\t},\n\t\trunAsyncAndReport: <T>(asyncMethod: () => Promise<T>, methodName: string): Promise<T> => {\n\t\t\treturn logger.runAsyncAndReport(asyncMethod, feature, methodName)\n\t\t},\n\t\trunAndReport: <T>(method: () => T, methodName: string): T => {\n\t\t\treturn logger.runAndReport(method, feature, methodName)\n\t\t},\n\t\treportError: (err: Error): void => {\n\t\t\tlogger.captureError(err, { tags: { feature, clientMetricsReporterError: true } })\n\t\t},\n\t\tmeter: (metricName: string): void => {\n\t\t\tlogger.meter(metricName)\n\t\t},\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\thistogram: (metricName: string, value: number): void => {},\n\t}\n}\n\nexport const platformFedopsMetricsReporter = (logger: IPlatformLogger): SiteAssetsMetricsReporter => {\n\treturn {\n\t\treportAsyncWithCustomKey: <T>(asyncMethod: () => Promise<T>, methodName: string, key: string): Promise<T> => {\n\t\t\treturn logger.reportAsyncWithCustomKey(methodName, key, asyncMethod)\n\t\t},\n\t\trunAsyncAndReport: <T>(asyncMethod: () => Promise<T>, methodName: string): Promise<T> => {\n\t\t\treturn logger.runAsyncAndReport(methodName, asyncMethod)\n\t\t},\n\t\trunAndReport: <T>(method: () => T, methodName: string): T => {\n\t\t\treturn logger.runAndReport(methodName, method)\n\t\t},\n\t\treportError: (err: Error): void => {\n\t\t\tlogger.captureError(err, { tags: { platformMetricsReporter: true } })\n\t\t},\n\t\tmeter: (metricName: string): void => {\n\t\t\tlogger.meter(metricName)\n\t\t},\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\thistogram: (metricName: string, value: number): void => {},\n\t}\n}\n","import {\n\tReportBI,\n\tSendBeat,\n\tBIReporter,\n\tBISymbol,\n\tWixBiSessionSymbol,\n\tReportPageNavigation,\n\tReportPageNavigationDone,\n\tAppNameSymbol,\n} from '@wix/thunderbolt-symbols'\nimport type { ContainerModuleLoader } from '@wix/thunderbolt-ioc'\nimport { Environment } from '../types/Environment'\nimport { getAppName } from '../bi-module/getAppName'\n\nconst consoleReportBi = (...args: Array<any>) => console.log('[TB] ', ...args)\n\nexport function createBiReporter(\n\treportBI: ReportBI = consoleReportBi,\n\tsendBeat: SendBeat = consoleReportBi,\n\tsetDynamicSessionData: BIReporter['setDynamicSessionData'] = () => {},\n\treportPageNavigation: ReportPageNavigation = consoleReportBi,\n\treportPageNavigationDone: ReportPageNavigationDone = consoleReportBi\n): BIReporter {\n\treturn {\n\t\treportBI,\n\t\tsendBeat,\n\t\tsetDynamicSessionData,\n\t\treportPageNavigation,\n\t\treportPageNavigationDone,\n\t}\n}\n\nexport const site = ({ biReporter, wixBiSession, viewerModel }: Environment): ContainerModuleLoader => (bind) => {\n\tbind(WixBiSessionSymbol).toConstantValue(wixBiSession)\n\tbind(BISymbol).toConstantValue(biReporter)\n\tbind(AppNameSymbol).toConstantValue(getAppName(viewerModel))\n}\n","import type { Hub } from '@wix/fe-essentials-viewer-platform/sentry/types'\nimport type { Factory } from '@wix/fe-essentials-viewer-platform/bi'\nimport type { PhasesConfig } from '@wix/fe-essentials-viewer-platform/fedops'\nimport type { FetchFn, ViewerModel } from '../../types'\n\nexport type NumericBoolean = 0 | 1 | -999 // -999 is a placeholder for not-supported data\n\nexport enum BeatEventType {\n\tSTART = 1,\n\tVISIBLE = 2,\n\tPAGE_FINISH = 33,\n\tFIRST_CDN_RESPONSE = 4,\n\tTBD = -1,\n\tPAGE_NAVIGATION = 101,\n\tPAGE_NAVIGATION_DONE = 103,\n}\n\nexport enum InternalNavigationType { // this param is sent with navigation-end beat (103)\n\tNAVIGATION = 1, // successful navigation\n\tDYNAMIC_REDIRECT = 2, // redirect finished\n\tINNER_ROUTE = 3, // inner route finish\n\tNAVIGATION_ERROR = 4, // for protected page | dynamic route errors\n\tCANCELED = 5, // unnecessary navigation canceled\n}\n\nexport const NavigationLoggerStringMap = {\n\t// map between InternalNavigationType to fed ops logger string\n\t1: 'page-navigation', // successful navigation\n\t2: 'page-navigation-redirect', // redirect finished\n\t3: 'page-navigation-inner-route', // inner route finish\n\t4: 'navigation-error', // for protected page | dynamic route errors\n\t5: 'navigation-canceled', // unnecessary navigation canceled\n}\n\nexport type ReportBI = (eventName: string, eventPhase?: string) => void\nexport type SendBeat = (\n\teventType: BeatEventType,\n\teventName: string,\n\toptions?: { pageId?: string; pageNumber?: number; navigationType?: InternalNavigationType }\n) => void\n\nexport type ReportPageNavigation = (pageId: string | undefined) => void\n\nexport type ReportPageNavigationDone = (pageId: string | undefined, navigationType: InternalNavigationType) => void\n\ntype WixBiSessionBase = {\n\tinitialTimestamp: number\n\tinitialRequestTimestamp: number\n\tviewerSessionId: string\n\tsessionId: string\n\tmsId: string\n\tis_rollout: 0 | 1 | null\n\tis_platform_loaded: NumericBoolean\n\tsuppressbi: boolean\n\tdc: string\n\trequestUrl: string\n\tsiteRevision: string\n\tsiteCacheRevision: string\n\tcheckVisibility: () => boolean\n\tisMesh: NumericBoolean\n\tisServerSide?: NumericBoolean\n\tfallbackReason?: string\n\tviewerName: 'thunderbolt' | 'thunderbolt-responsive'\n\tst: 0 | 1 | 2 | 3\n\tbtype: string\n\tisjp: boolean\n\tcommonConfig: ViewerModel['commonConfig']\n\tmuteThunderboltEvents: boolean\n}\n\nexport type CookieAnalysis = { isCached: boolean; caching: string; microPop?: string }\n\nexport type WixBiSession = WixBiSessionBase & CookieAnalysis\n\nexport type BiStore = {\n\tfrogUrlOverride?: string\n\tcheckVisibility?: () => boolean\n\tmsid: WixBiSession['msId']\n\tinitialTimestamp: WixBiSession['initialTimestamp']\n\tinitialRequestTimestamp: WixBiSession['initialRequestTimestamp']\n\trequestUrl?: WixBiSession['requestUrl']\n\tst?: WixBiSession['st']\n\tviewerSessionId: WixBiSession['viewerSessionId']\n\tdc: WixBiSession['dc']\n\tmicroPop?: string\n\tis_rollout: WixBiSession['is_rollout']\n\tisCached: WixBiSession['isCached']\n\tcaching?: CookieAnalysis['caching']\n\tis_headless: boolean\n\tis_headless_reason?: string\n\tviewerVersion: string\n\trolloutData: ViewerModel['rollout']\n\tsession_id?: string\n\tpageData: { pageNumber: number; pageId: string; pageUrl: string; isLightbox: boolean }\n}\n\nexport type FedopsStore = {\n\tmsid: string\n\tsessionId: string\n\tviewerSessionId: string\n\tdc: string\n\tis_rollout: boolean | null\n\tis_dac_rollout?: number\n\tis_sav_rollout?: number\n\tisCached: boolean | null\n\tis_headless: boolean\n\tsiteMemberId?: string\n}\n\nexport type FedopsConfig = {\n\tbiLoggerFactory: Factory\n\tcustomParams?: { [paramName: string]: string | boolean }\n\tparamsOverrides?: { [paramName: string]: any }\n\tphasesConfig?: PhasesConfig\n\tpresetType?: string\n\tappName?: string\n\treportBlackbox?: boolean\n\tmuteThunderboltEvents?: boolean\n}\n\nexport type LoggerIntegrations = {\n\tsentry: Hub\n\twixBiSession: WixBiSession\n\tviewerModel: ViewerModel\n\tfetch: FetchFn\n\tssrInitialEvents?: Array<{ name: string; startTime: number }>\n\tonReport?: (\n\t\tmessage: string,\n\t\topts?: {\n\t\t\tparams?: Record<any, any>\n\t\t\tlevel?: 'trace' | 'debug' | 'info' | 'warn' | 'error'\n\t\t\tstart?: boolean\n\t\t}\n\t) => void\n}\n\nexport type MuteFunc = () => boolean\n","export const BISymbol = Symbol.for('BI')\nexport const WixBiSessionSymbol = Symbol.for('WixBiSessionSymbol')\nexport const AppNameSymbol = Symbol.for('appName')\n"],"names":["createBaseBiLoggerFactory","useBatch","publishMethod","PublishMethods","endpoint","muteBi","biStore","sessionManager","fetch","factory","frogUrlOverride","host","replace","setMuted","withUoUContext","msid","withNonEssentialContext","visitorId","getVisitorId","siteMemberId","getSiteMemberId","updateDefaults","vsi","viewerSessionId","_av","viewerVersion","isb","is_headless","isbr","is_headless_reason","commonBiLoggerFactory","createBiLoggerFactoryForFedops","options","session_id","initialTimestamp","initialRequestTimestamp","dc","microPop","isCached","pageData","rolloutData","caching","checkVisibility","requestUrl","st","ts","Date","now","tsn","window","Math","round","performance","timeOrigin","calculateTSN","url","pageUrl","ish","pn","pageNumber","isFirstNavigation","pv","pageId","isServerSide","is_lightbox","isLightbox","is_cached","is_sav_rollout","siteAssetsVersionsRollout","is_dac_rollout","isDACRollout","v","createFedopsLogger","biLoggerFactory","customParams","phasesConfig","appName","presetType","reportBlackbox","paramsOverrides","muteThunderboltEvents","experiments","fedopsLogger","isPersistent","enableSampleRateForAppNames","viewerModel","interactionStarted","interactionEnded","appLoadingPhaseStart","appLoadingPhaseFinish","shouldReportEvent","event","appIdentifier","appShouldReportAll","appId","shouldAlwaysReportEvent","shouldAlwaysMuteEvent","interaction","args","call","mark","timeoutId","phase","fedopsMetricsReporter","logger","feature","reportAsyncWithCustomKey","asyncMethod","methodName","key","runAsyncAndReport","runAndReport","method","reportError","err","captureError","tags","clientMetricsReporterError","meter","metricName","histogram","value","consoleReportBi","console","log","createBiReporter","reportBI","sendBeat","setDynamicSessionData","reportPageNavigation","reportPageNavigationDone","site","biReporter","wixBiSession","bind","toConstantValue","BeatEventType","InternalNavigationType","NavigationLoggerStringMap","BISymbol","Symbol","for","WixBiSessionSymbol","AppNameSymbol"],"sourceRoot":""}