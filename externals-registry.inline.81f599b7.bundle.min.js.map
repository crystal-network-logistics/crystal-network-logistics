{"version":3,"file":"externals-registry.inline.81f599b7.bundle.min.js","mappings":"8HAGAA,OAAOC,mBAAqBD,OAAOC,oBAAsB,CAAEC,IAAK,CAAC,GAEjE,MAAM,OAAEC,EAAM,MAAEC,EAAK,SAAEC,EAAQ,eAAEC,GAAoBN,OAAOO,kBAAoB,CAC/EJ,OAAQ,CAAC,EACTC,MAAO,CAAC,EACRC,SAAU,CAAC,EACXC,eAAgB,CAAC,GAGlBA,EAAeE,OAAS,IAAIC,SAASC,IACpCJ,EAAeK,OAASD,CAAO,IAGhCP,EAAOK,OAAS,IAAIC,SAASC,IAC5BP,EAAOQ,OAASD,CAAO,IAInBV,OAAOY,WAEXZ,OAAOa,kBAAoBb,OAAOY,SAAW,CAAEE,SAAS,IAEzDT,EAASG,OAAS,IAAIC,SAASC,IAC9BL,EAASM,OAAS,KAIjBI,OAAOC,OAAOhB,OAAOa,mBAAqB,CAAC,EAAGb,OAAOY,SAAU,CAAEE,SAAS,IAC1EJ,GAAS,CACT,IAGGV,OAAOiB,QAEXjB,OAAOkB,eAAiBlB,OAAOiB,MAAQ,CAAEH,SAAS,IAEnDV,EAAMI,OAAS,IAAIC,SAASC,IAC3BN,EAAMO,OAAS,KAIdI,OAAOC,OAAOhB,OAAOkB,gBAAkB,CAAC,EAAGlB,OAAOiB,MAAO,CAAEH,SAAS,IACpEJ,GAAS,CACT,IAGFV,OAAOmB,uBAAyBV,QAAQW,IAAI,CAAChB,EAAMI,OAAQH,EAASG,SACpER,OAAOqB,iC","sources":["webpack:///./externals-registry.ts"],"sourcesContent":["// expose externals (lodash, react, react dom, ...) libs on the window for chunks to be able to import them before they are loaded\n\n// set __imageClientApi__ to be an object so it can be passed as reference to functions and set as ref when it is downloaded by customElement\nwindow.__imageClientApi__ = window.__imageClientApi__ || { sdk: {} }\n\nconst { lodash, react, reactDOM, imageClientApi } = (window.externalsRegistry = {\n\tlodash: {} as typeof window.externalsRegistry['lodash'],\n\treact: {} as typeof window.externalsRegistry['react'],\n\treactDOM: {} as typeof window.externalsRegistry['reactDOM'],\n\timageClientApi: {} as typeof window.externalsRegistry['imageClientApi'],\n})\n\nimageClientApi.loaded = new Promise((resolve) => {\n\timageClientApi.onload = resolve\n})\n\nlodash.loaded = new Promise((resolve) => {\n\tlodash.onload = resolve\n})\n\n// sometimes React is loaded before externals-registry...\nif (!window.ReactDOM) {\n\t// @ts-ignore\n\twindow.reactDOMReference = window.ReactDOM = { loading: true }\n}\nreactDOM.loaded = new Promise((resolve) => {\n\treactDOM.onload = () => {\n\t\t// if a chunk that is dependent on react-dom was evaluated prior to evaluating react-dom,\n\t\t// we need to override the stale reactDOMReference this chunk holds\n\t\t// with window.ReactDOM which is overridden by react-dom evaluation.\n\t\tObject.assign(window.reactDOMReference || {}, window.ReactDOM, { loading: false })\n\t\tresolve()\n\t}\n})\n\nif (!window.React) {\n\t// @ts-ignore\n\twindow.reactReference = window.React = { loading: true }\n}\nreact.loaded = new Promise((resolve) => {\n\treact.onload = () => {\n\t\t// if a chunk that is dependent on react was evaluated prior to evaluating react,\n\t\t// we need to override the stale reactReference this chunk holds\n\t\t// with window.React which is overridden by react evaluation.\n\t\tObject.assign(window.reactReference || {}, window.React, { loading: false })\n\t\tresolve()\n\t}\n})\n\nwindow.reactAndReactDOMLoaded = Promise.all([react.loaded, reactDOM.loaded])\nwindow.resolveExternalsRegistryPromise()\n"],"names":["window","__imageClientApi__","sdk","lodash","react","reactDOM","imageClientApi","externalsRegistry","loaded","Promise","resolve","onload","ReactDOM","reactDOMReference","loading","Object","assign","React","reactReference","reactAndReactDOMLoaded","all","resolveExternalsRegistryPromise"],"sourceRoot":""}